name: "Build: MacOS"

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - develop
    paths:
      - "data/**"
      - "mods/**" 
      - "modules/**"
      - "layouts/**"
      - ".github/**"
      - "src/**"
  push:
    branches:
      - master
      - develop
      - fix/cmake
    paths:
      - ".github/**"
      - "data/**"
      - "mods/**"
      - "modules/**"
      - "layouts/**"
      - "src/**"

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  MAKEFLAGS: '-j 2'
  VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/vcpkg/bincache
  VCPKG_BINARY_SOURCES: 'clear;default,readwrite'

jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.buildtype }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macOS-14
            buildtype: macos-release
            triplet: x64-osx
            artifact-name: otclient
            packages: sccache

    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Install macOS Dependencies
      run: |
        brew install xquartz
        brew install libx11
        brew install libxext
        brew install openal-soft
        brew install physfs
        brew install sdl2
    - name: Restore artifacts and install vcpkg
      id: vcpkg-step
      run: |
        vcpkgCommitId=$(grep '.builtin-baseline' vcpkg.json | awk -F: '{print $2}' | tr -d '," ')
        echo "vcpkg commit ID: $vcpkgCommitId"
        echo "vcpkgGitCommitId=$vcpkgCommitId" >> "$GITHUB_OUTPUT"

    - name: Get vcpkg commit id from vcpkg.json
      uses: lukka/run-vcpkg@main
      with:
        vcpkgGitCommitId: ${{ steps.vcpkg-step.outputs.vcpkgGitCommitId }}
        vcpkgJsonIgnores: "['**/vcpkg/**', '**/browser/overlay-ports/**']"

    - name: Get latest CMake and ninja
      uses: lukka/get-cmake@main

    - name: Run CMake
      uses: lukka/run-cmake@main
      with:
        configurePreset: ${{ matrix.buildtype }}
        buildPreset: ${{ matrix.buildtype }}

    - name: Create and Upload Artifact
      if: ${{ github.event_name != 'pull_request' }}
      uses: actions/upload-artifact@main
      with:
        name: otclient-${{ matrix.os }}-${{ matrix.buildtype }}-${{ github.sha }}
        path: |
          ${{ github.workspace }}/otclient