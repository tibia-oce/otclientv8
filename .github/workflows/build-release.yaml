name: Build & Release

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - develop
    paths:
      - "data/**"
      - "mods/**" 
      - "modules/**"
      - "layouts/**"
      - ".github/**"
      - "src/**"
  push:
    branches:
      - master
      - develop
    paths:
      - "data/**"
      - "mods/**"
      - "modules/**"
      - "layouts/**"
      - "src/**"

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  MAKEFLAGS: '-j 2'

jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.buildtype }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
        buildtype: [windows-release]
        include:
        - os: windows-2022
          triplet: x64-windows
          packages: >
            sccache #magic___^_^___line
    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Setup anew (or from cache) vcpkg (and does not build any package)
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'

    - name: Restore artifacts and install vcpkg
      id: vcpkg-step
      run: |
        $json=Get-Content vcpkg.json -Raw | ConvertFrom-Json
        $vcpkgCommitId=$json.'builtin-baseline'
        Write-Host "vcpkg commit ID: $vcpkgCommitId"
        echo "vcpkgGitCommitId=$vcpkgCommitId" >> "$GITHUB_OUTPUT"

    - name: Get latest CMake and ninja
      uses: lukka/get-cmake@latest

    - name: Run CMake
      uses: lukka/run-cmake@v10
      with:
        configurePreset: '${{ matrix.buildtype }}'
        buildPreset: '${{ matrix.buildtype }}'

    - name: Create and Upload Artifact (exe)
      uses: actions/upload-artifact@main
      with:
        name: otclient-${{ matrix.os }}-${{ matrix.buildtype }}-${{ github.sha }}
        path: |
          ${{ github.workspace }}/build/${{ matrix.buildtype }}/otclient.exe

    - name: Create Temporary Directory
      run: |
        $tempDir = "$env:GITHUB_WORKSPACE/client"
        New-Item -Path $tempDir -ItemType Directory -Force

    - name: Move Files to Temporary Directory 
      run: |
        Copy-Item -Path "$env:GITHUB_WORKSPACE/data" -Destination "$env:GITHUB_WORKSPACE/client/data" -Recurse -Force
        Copy-Item -Path "$env:GITHUB_WORKSPACE/mods" -Destination "$env:GITHUB_WORKSPACE/client/mods" -Recurse -Force  
        Copy-Item -Path "$env:GITHUB_WORKSPACE/modules" -Destination "$env:GITHUB_WORKSPACE/client/modules" -Recurse -Force
        Copy-Item -Path "$env:GITHUB_WORKSPACE/init.lua" -Destination "$env:GITHUB_WORKSPACE/client/init.lua" -Force
        Copy-Item -Path "$env:GITHUB_WORKSPACE/build/${{ matrix.buildtype }}/otclient.exe" -Destination "$env:GITHUB_WORKSPACE/client/otclient.exe" -Force

    - name: Compress Temporary Directory
      run: |
        Compress-Archive -Path "$env:GITHUB_WORKSPACE/client" -DestinationPath "$env:GITHUB_WORKSPACE/client.zip"

    - name: Upload client artifact
      uses: actions/upload-artifact@v4
      with:
        name: client-zip-${{ matrix.buildtype }}
        path: client.zip