name: "Build: Ubuntu"
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - develop
    paths:
      - "data/**"
      - "mods/**" 
      - "modules/**"
      - "layouts/**"
      - ".github/workflows/build-ubuntu.yaml"
      - "src/**"
  push:
    branches:
      - master
      - develop
    paths:
      - ".github/workflows/build-ubuntu.yaml"
      - "data/**"
      - "mods/**"
      - "modules/**"
      - "layouts/**"
      - "src/**"

env:
  PREMAKE_VERSION: 5.0.0-beta2
  VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/vcpkg/bincache
  VCPKG_BINARY_SOURCES: 'clear;default,readwrite'

jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.buildtype }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            buildtype: linux-release
            triplet: x64-linux
            artifact-name: otclient
            required-libs: >-
              libluajit-5.1-dev freeglut3-dev libasound2-dev libgl-dev 
              libgl1-mesa-dev libglu1-mesa-dev libglew-dev libx11-dev 
              libxi-dev libxmu-dev mesa-common-dev xorg-dev libxrandr-dev

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Check and install system dependencies
      run: |
        # Check for missing libraries
        missing_libs=""
        for lib in ${{ matrix.required-libs }}; do
          if ! dpkg-query -W -f='${Status}' $lib 2>/dev/null | grep -q "ok installed"; then
            missing_libs="$missing_libs $lib"
          fi
        done

        # Warn about missing libraries
        if [ ! -z "$missing_libs" ]; then
          echo "Warning: The following required libraries are missing:"
          echo "$missing_libs"
          echo ""
          echo "You may need to install these libraries using the following command:"
          echo "sudo apt-get install$missing_libs"
          echo ""
          echo "Continuing with the build process, but it may fail if dependencies are missing."
        else
          echo "All required libraries are installed. Proceeding with the build..."
        fi

        # Install missing libraries
        if [ ! -z "$missing_libs" ]; then
          sudo apt-get update
          sudo apt-get install -y $missing_libs
        fi

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: ${{ steps.vcpkg-step.outputs.vcpkgGitCommitId }}
        vcpkgJsonIgnores: "['**/vcpkg/**', '**/browser/overlay-ports/**']"

    - name: Install vcpkg dependencies
      run: |
        if [ ! -d vcpkg ]; then
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          ./bootstrap-vcpkg.sh
        fi
        vcpkg/vcpkg install --triplet x64-linux

    - name: Download and setup Premake
      run: |
        mkdir -p tools
        if [ ! -f tools/premake5 ]; then
          wget --no-netrc -q --show-progress \
            -O tools/premake.tar.gz \
            "https://github.com/premake/premake-core/releases/download/v${{ env.PREMAKE_VERSION }}/premake-${{ env.PREMAKE_VERSION }}-linux.tar.gz"
          cd tools
          tar -xzf premake.tar.gz
          rm premake.tar.gz
          chmod +x premake5
        fi

    - name: Generate project files
      run: |
        ./tools/premake5 gmake2

    - name: Build project
      run: |
        make -C build config=release

    - name: Create Client Package
      run: |
        mkdir -p ${{ github.workspace }}/client
        cp -f build/bin/Release/otclient ${{ github.workspace }}/client/
        cp -f build/bin/Release/*.so ${{ github.workspace }}/client/ 2>/dev/null || true
        chmod +x ${{ github.workspace }}/client/otclient

        # Copy additional files
        cp -R ${{ github.workspace }}/layouts ${{ github.workspace }}/client/
        cp -R ${{ github.workspace }}/data ${{ github.workspace }}/client/
        cp -R ${{ github.workspace }}/mods ${{ github.workspace }}/client/
        cp -R ${{ github.workspace }}/modules ${{ github.workspace }}/client/
        cp ${{ github.workspace }}/init.lua ${{ github.workspace }}/client/

    - name: Create and Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact-name }}
        path: ${{ github.workspace }}/client