name: "Build: Ubuntu"

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - develop
    paths:
      - "data/**"
      - "mods/**" 
      - "modules/**"
      - "layouts/**"
      - ".github/workflows/build-ubuntu.yaml"
      - "src/**"
  push:
    branches:
      - master
      - develop
      - fix/cmake
    paths:
      - ".github/workflows/build-ubuntu.yaml"
      - "data/**"
      - "mods/**"
      - "modules/**"
      - "layouts/**"
      - "src/**"

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  MAKEFLAGS: '-j 2'
  VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/vcpkg/bincache
  VCPKG_BINARY_SOURCES: 'clear;default,readwrite'

jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.buildtype }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            buildtype: linux-release
            triplet: x64-linux
            artifact-name: otclient
            packages: >-
              ccache
              freeglut3-dev
              libasound2-dev
              libgl-dev
              libgl1-mesa-dev
              libglu1-mesa-dev
              libglew-dev
              libx11-dev
              libxi-dev
              libxmu-dev
              mesa-common-dev
              xorg-dev

    steps:
    - name: Checkout repository
      uses: actions/checkout@main
    - name: Install OS Dependencies
      if: matrix.packages != ''
      run: |
        sudo apt-get update
        sudo apt-get install -y ${{ matrix.packages }}

    - name: Switch to gcc-12
      run: |
        sudo apt install gcc-12 g++-12
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 100 --slave /usr/bin/g++ g++ /usr/bin/g++-12 --slave /usr/bin/gcov gcov /usr/bin/gcov-12
        sudo update-alternatives --set gcc /usr/bin/gcc-12

    - name: Restore artifacts and install vcpkg
      id: vcpkg-step
      run: |
        vcpkgCommitId=$(grep '.builtin-baseline' vcpkg.json | awk -F: '{print $2}' | tr -d '," ')
        echo "vcpkg commit ID: $vcpkgCommitId"
        echo "vcpkgGitCommitId=$vcpkgCommitId" >> "$GITHUB_OUTPUT"

    - name: Get vcpkg commit id from vcpkg.json
      uses: lukka/run-vcpkg@main
      with:
        vcpkgGitCommitId: ${{ steps.vcpkg-step.outputs.vcpkgGitCommitId }}
        vcpkgJsonIgnores: "['**/vcpkg/**', '**/browser/overlay-ports/**']"

    - name: Get latest CMake and ninja
      uses: lukka/get-cmake@main

    - name: Run CMake
      uses: lukka/run-cmake@main
      with:
        configurePreset: ${{ matrix.buildtype }}
        buildPreset: ${{ matrix.buildtype }}

    - name: Create Client Package
      run: |
        mkdir -p ${{ github.workspace }}/client
        cp -R ${{ github.workspace }}/data ${{ github.workspace }}/client/
        cp -R ${{ github.workspace }}/mods ${{ github.workspace }}/client/
        cp -R ${{ github.workspace }}/modules ${{ github.workspace }}/client/
        cp ${{ github.workspace }}/init.lua ${{ github.workspace }}/client/
        cp ${{ github.workspace }}/build/${{ matrix.buildtype }}/otclient ${{ github.workspace }}/client/
        chmod +x ${{ github.workspace }}/client/otclient

    - name: Create and Upload Artifact
      if: ${{ github.event_name != 'pull_request' }}
      uses: actions/upload-artifact@main
      with:
        name: client
        path: ${{ github.workspace }}/client
