name: "Build: Ubuntu"
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - develop
    paths:
      - "data/**"
      - "mods/**" 
      - "modules/**"
      - "layouts/**"
      - ".github/workflows/build-ubuntu.yaml"
      - "src/**"
  push:
    branches:
      - master
      - develop
    paths:
      - ".github/workflows/build-ubuntu.yaml"
      - "data/**"
      - "mods/**"
      - "modules/**"
      - "layouts/**"
      - "src/**"

env:
  PREMAKE_VERSION: 5.0.0-beta2

jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.buildtype }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            buildtype: linux-release
            required-libs: >-
              libluajit-5.1-dev 
              freeglut3-dev 
              libasound2-dev 
              libgl-dev 
              libgl1-mesa-dev 
              libglu1-mesa-dev 
              libglew-dev 
              libx11-dev 
              libxi-dev 
              libxmu-dev 
              mesa-common-dev 
              xorg-dev 
              libxrandr-dev

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ${{ matrix.required-libs }}

    - name: Get vcpkg commit id
      id: vcpkg-step
      run: |
        vcpkgCommitId=$(grep '.builtin-baseline' vcpkg.json | awk -F: '{print $2}' | tr -d '," ')
        echo "vcpkg commit ID: $vcpkgCommitId"
        echo "vcpkgGitCommitId=$vcpkgCommitId" >> "$GITHUB_OUTPUT"

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: ${{ steps.vcpkg-step.outputs.vcpkgGitCommitId }}
        vcpkgJsonIgnores: "['**/vcpkg/**', '**/browser/overlay-ports/**']"
        vcpkgDirectory: ${{ github.workspace }}/vcpkg
        runVcpkgInstall: true
      env:
        VCPKG_DEFAULT_TRIPLET: x64-linux
        VCPKG_INSTALLED_DIR: ${{ github.workspace }}/vcpkg_installed

    - name: Verify vcpkg installation
      run: |
        echo "Environment:"
        env | grep VCPKG
        
        echo "Library locations:"
        find $GITHUB_WORKSPACE -name "boost" -type d
        find $GITHUB_WORKSPACE/vcpkg_installed -type f || true
        find $GITHUB_WORKSPACE/vcpkg/installed -type f || true
        
        echo "Include directories:"
        ls -la $GITHUB_WORKSPACE/vcpkg_installed/x64-linux/include || true
        ls -la $GITHUB_WORKSPACE/vcpkg/installed/x64-linux/include || true

    - name: Download and setup Premake
      run: |
        mkdir -p tools
        wget https://github.com/premake/premake-core/releases/download/v${{ env.PREMAKE_VERSION }}/premake-${{ env.PREMAKE_VERSION }}-linux.tar.gz -O tools/premake.tar.gz
        cd tools
        tar -xzf premake.tar.gz
        chmod +x premake5
        cd ..

    - name: Generate project files
      run: |
        ./tools/premake5 gmake2

    - name: Build project
      run: |
        make -C build config=release

    - name: Create Client Package
      run: |
        mkdir -p ${{ github.workspace }}/client
        cp -f build/bin/Release/otclient ${{ github.workspace }}/client/
        cp -f build/bin/Release/*.so ${{ github.workspace }}/client/ 2>/dev/null || true
        chmod +x ${{ github.workspace }}/client/otclient

        # Copy additional files
        cp -R ${{ github.workspace }}/layouts ${{ github.workspace }}/client/
        cp -R ${{ github.workspace }}/data ${{ github.workspace }}/client/
        cp -R ${{ github.workspace }}/mods ${{ github.workspace }}/client/
        cp -R ${{ github.workspace }}/modules ${{ github.workspace }}/client/
        cp ${{ github.workspace }}/init.lua ${{ github.workspace }}/client/

    - name: Create and Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: otclient
        path: ${{ github.workspace }}/client