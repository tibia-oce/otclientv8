name: "Build: Windows"

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - develop
    paths:
      - "data/**"
      - "mods/**" 
      - "modules/**"
      - "layouts/**"
      - ".github/workflows/build-windows.yaml"
      - "src/**"
  push:
    branches:
      - master
      - develop
    paths:
      - ".github/workflows/build-windows.yaml"
      - "data/**"
      - "mods/**"
      - "modules/**"
      - "layouts/**"
      - "src/**"


env:
  PREMAKE_VERSION: 5.0.0-beta2
  VCPKG_DEFAULT_TRIPLET: x64-windows
  VCPKG_INSTALLED_DIR: ${{ github.workspace }}/vcpkg_installed
  MSBUILD_OPTIONS: >
    /p:Configuration=Release 
    /p:Platform=x64
    /p:VcpkgEnabled=true
    /p:VcpkgEnableManifest=true
    /p:VcpkgManifestInstall=true
    /p:VcpkgConfiguration=Release
    /p:UseMultiToolTask=true
    /p:EnforceProcessCountAcrossBuilds=true

jobs:
  build:
    name: Windows Build
    runs-on: windows-2022
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2
      
    - name: Cache vcpkg
      uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/vcpkg
          ${{ github.workspace }}/vcpkg_installed
        key: vcpkg-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: ${{ steps.vcpkg-step.outputs.vcpkgGitCommitId }}
        vcpkgJsonIgnores: "['**/vcpkg/**']"
        vcpkgDirectory: ${{ github.workspace }}/vcpkg
        runVcpkgInstall: true

    - name: Download Premake
      run: |
        mkdir -p tools
        Invoke-WebRequest -Uri "https://github.com/premake/premake-core/releases/download/v${{ env.PREMAKE_VERSION }}/premake-${{ env.PREMAKE_VERSION }}-windows.zip" -OutFile "tools/premake.zip"
        Expand-Archive tools/premake.zip -DestinationPath tools
        cd tools
        Rename-Item "premake5.exe" -NewName "premake.exe"

    - name: Generate Solution
      run: ./tools/premake.exe vs2022

    - name: Build Solution
      run: |
        MSBuild.exe build/otclient.sln ${{ env.MSBUILD_OPTIONS }}

    - name: Create Package
      run: |
        mkdir -p ${{ github.workspace }}\client
        Copy-Item -Path build\bin\Release\otclient.exe -Destination ${{ github.workspace }}\client
        Copy-Item -Path build\bin\Release\*.dll -Destination ${{ github.workspace }}\client -ErrorAction SilentlyContinue
        Copy-Item -Recurse -Path layouts,data,mods,modules,init.lua -Destination ${{ github.workspace }}\client

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: otclient-windows
        path: ${{ github.workspace }}\client
